<Window
  x:Class="Qt6uox4f1iujybm.SubWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Qt6uox4f1iujybm"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  Title="SubWindow"
  Width="800"
  Height="450"
  d:DataContext="{d:DesignInstance Type=local:ViewModel}"
  AllowDrop="True"
  Closing="Window_Closing"
  DragOver="File_DragOver"
  Drop="File_Drop"
  Visibility="{Binding IsSubWindowShown, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
  mc:Ignorable="d">
  <!--
    ↑Visibilityのバインドで表示・非表示の切り替え
    boolをVisibilityに変換する組み込みのコンバータ（App.xaml内）
  -->


  <DockPanel>
    <StatusBar DockPanel.Dock="Bottom">
      <StatusBarItem>
        <!--
          Binding内のスラッシュは、Itemsで選択されたItemのFilePathプロパティという意味
          [方法: 階層データでマスター詳細パターンを使用する - WPF .NET Framework | Microsoft Learn](https://learn.microsoft.com/ja-jp/dotnet/desktop/wpf/data/how-to-use-the-master-detail-pattern-with-hierarchical-data)
        -->
        <TextBlock Text="{Binding Items/FilePath}" />
      </StatusBarItem>
    </StatusBar>

    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="5" />
        <ColumnDefinition Width="2*" />
      </Grid.ColumnDefinitions>

      <!--
        IsSynchronizedWithCurrentItem 選択の同期
        [Selector.IsSynchronizedWithCurrentItem プロパティ (System.Windows.Controls.Primitives) | Microsoft Learn](https://learn.microsoft.com/ja-jp/dotnet/api/system.windows.controls.primitives.selector.issynchronizedwithcurrentitem)
      -->
      <ListView IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding Items}">
        <ListView.View>
          <GridView>
            <GridViewColumn Width="200" Header="タイトル">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <TextBox
                    Width="200"
                    Padding="1"
                    Text="{Binding FileTitle}"
                    TextWrapping="Wrap" />
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn DisplayMemberBinding="{Binding FileName}" Header="ファイル名" />
            <GridViewColumn>
              <GridViewColumn.CellTemplate>
                <DataTemplate>

                  <!--
                    ここでのDataContextは個々のItemになっているため、
                    コマンドのあるViewModelをListViewまでさかのぼって取得
                    [RelativeSource のマークアップ拡張機能 - WPF .NET Framework | Microsoft Learn](https://learn.microsoft.com/ja-jp/dotnet/desktop/wpf/advanced/relativesource-markupextension)
                  -->
                  <Button
                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                    CommandParameter="{Binding}"
                    Content="削除" />
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
          </GridView>
        </ListView.View>
      </ListView>

      <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

      <ListView
        Grid.Column="2"
        d:ItemsSource="{d:SampleData}"
        IsSynchronizedWithCurrentItem="True"
        ItemsSource="{Binding Items}"
        ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        <ListView.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel />
          </ItemsPanelTemplate>
        </ListView.ItemsPanel>
        <ListView.ItemTemplate>
          <DataTemplate>
            <Grid Width="150" Height="150">
              <TextBlock Text="{Binding FileTitle}" />

              <!--
                ロックさせないコンバータ（App.xaml内）
                [WPFで画像表示時にファイルをロックしないようにしたい - かずきのBlog@hatena](https://blog.okazuki.jp/entry/2015/06/20/122427)
              -->
              <Image Source="{Binding FilePath, Converter={StaticResource ImageConverter}}" />
            </Grid>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </Grid>
  </DockPanel>
</Window>
