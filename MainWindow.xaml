<Window
  x:Class="Qt6uox4f1iujybm.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:local="clr-namespace:Qt6uox4f1iujybm"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  Title="MainWindow"
  d:DataContext="{d:DesignInstance Type=local:ViewModel}"
  SizeToContent="WidthAndHeight"
  mc:Ignorable="d">
  <DockPanel>
    <ToolBar DockPanel.Dock="Top">
      <Button
        MinWidth="128"
        Click="OpenSelectPictDialog_Click"
        Content="背景画像の選択" />
      <Button
        MinWidth="128"
        Click="OpenRectListWindow_Click"
        Content="四角の詳細" />
    </ToolBar>
    <Grid>

      <!--
        ロックさせないコンバータ
        [WPFで画像表示時にファイルをロックしないようにしたい - かずきのBlog@hatena](https://blog.okazuki.jp/entry/2015/06/20/122427)
      -->
      <Image
        Width="1000"
        Height="800"
        HorizontalAlignment="Left"
        VerticalAlignment="Top"
        Source="{Binding Pict.SelectedItem.FilePath, Converter={StaticResource ImageConverter}}"
        StretchDirection="DownOnly" />

      <ListBox
        Background="{x:Null}"
        IsSynchronizedWithCurrentItem="True"
        ItemsSource="{Binding Rect.Items}">
        <ListBox.Resources>
          <DataTemplate DataType="{x:Type local:RectItem}">
            <Rectangle
              Width="{Binding Width, Mode=TwoWay}"
              Height="{Binding Height, Mode=TwoWay}"
              Fill="{Binding Fill}"
              Stroke="{Binding Stroke}"
              StrokeThickness="{Binding StrokeThickness}" />
          </DataTemplate>
        </ListBox.Resources>

        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <Canvas>
              <i:Interaction.Behaviors>

                <!--
                  ドラッグでラバーバンド（範囲選択するような四角の枠）を表示するビヘイビア
                  NewRectイベントでその範囲を新規四角としてRect.Itemsに追加
                -->
                <local:RubberBandBehavior NewRect="RubberBandBehavior_NewRect" />
              </i:Interaction.Behaviors>
            </Canvas>
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
        <ListBox.ItemContainerStyle>
          <Style TargetType="ListBoxItem">
            <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay}" />
            <Setter Property="Canvas.Top" Value="{Binding Y, Mode=TwoWay}" />
            <Setter Property="Template">
              <Setter.Value>

                <!--
                  ListBoxの「選択したら薄く色づく枠」はListBoxItemが出している
                  変更したければTemplateをいじって好きなようにできる
                  今回は一回り大きく点線で囲ったようなもの
                -->
                <ControlTemplate TargetType="ListBoxItem">
                  <Grid>

                    <!--  選択中枠  -->
                    <Rectangle
                      x:Name="rectangle"
                      Margin="-4"
                      Stroke="Black"
                      StrokeDashArray="4 4"
                      Visibility="Collapsed" />
                    <ContentPresenter />
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                      <Setter TargetName="rectangle" Property="Visibility" Value="Visible" />
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>

              <!--
                RectListWindowの（CollectionViewを共有する）DataGridが
                CanUserAddRowsなのでこちらにも入ってきてしまうNewItemPlaceholderを非表示
              -->
              <DataTrigger Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                <Setter Property="Visibility" Value="Collapsed" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ListBox.ItemContainerStyle>
      </ListBox>
    </Grid>
  </DockPanel>
</Window>
